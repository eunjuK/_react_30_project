{"version":3,"file":"bundle.js","mappings":"mBAGe,ICHA,MACb,GAAmB,EAEnB,GAAe,EAEf,GAAc,EAEd,IAAY,EAEZ,GAEAA,YAEAC,WAEAC,UAEAC,cAEAC,cAEAC,cACEC,KAAKC,gBACLD,KAAKE,kBACLF,KAAKG,iBACLH,KAAKI,qBACLJ,KAAKK,eACLL,KAAKM,WACLN,KAAKO,kBACLP,KAAKQ,eAGPP,gBACED,KAAKN,YAAce,SAASC,eAAe,cAC3CV,KAAKL,WAAaK,KAAKN,YAAYiB,cAAc,cACjDX,KAAKJ,UAAYI,KAAKN,YAAYiB,cAAc,SAChDX,KAAKH,cAAgBG,KAAKN,YAAYiB,cAAc,SACpDX,KAAKY,gBAAkBZ,KAAKN,YAAYiB,cAAc,mBACtDX,KAAKF,cAAgBE,KAAKN,YAAYiB,cAAc,iBAGtDN,eACEL,MAAK,EAAca,YAAYb,KAAKc,YAAYC,KAAKf,MAAO,KAG9DE,kBACEF,MAAK,EAAeA,KAAKL,WAAWqB,iBAAiB,UAAUC,OAGjEd,iBACEH,MAAK,EAAcA,KAAKL,WAAWuB,YAGrCd,qBACEJ,KAAKL,WAAWwB,MAAMC,MAAWpB,MAAK,EAAeA,MAAK,EAA5B,KAGhCM,WACEN,KAAKJ,UAAUyB,iBAAiB,QAASrB,KAAKc,YAAYC,KAAKf,OAC/DA,KAAKH,cAAcwB,iBAAiB,QAASrB,KAAKsB,WAAWP,KAAKf,OAClEA,KAAKY,gBAAgBS,iBACnB,QACArB,KAAKuB,iBAAiBR,KAAKf,OAE7BA,KAAKF,cAAcuB,iBAAiB,QAASrB,KAAKwB,SAAST,KAAKf,OAGlEwB,SAASC,GACP,MAAMC,EAAeD,EAAEE,OAAOC,WAAWA,WAEQ,UAA7CF,EAAaG,aAAa,gBAC5B7B,MAAK,GAAY,EACjB0B,EAAaI,aAAa,cAAe,QACzC9B,KAAKK,iBAELL,MAAK,GAAY,EACjB0B,EAAaI,aAAa,cAAe,SACzCC,cAAc/B,MAAK,IAIvBuB,iBAAiBE,GACf,MAAMO,EAAgBC,SAASR,EAAEE,OAAOO,QAAQC,MAAO,IACnDC,OAAOC,UAAUL,KACnBhC,MAAK,EAAmBgC,EACxBhC,KAAKL,WAAWwB,MAAMmB,KAAO,IAC3BtC,MAAK,EAAcA,MAAK,MAE1BA,KAAKQ,gBAITM,cACEd,MAAK,GAAoB,EACrBA,MAAK,IAAqBA,MAAK,IACjCA,MAAK,EAAmB,GAE1BA,KAAKL,WAAWwB,MAAMmB,KAAO,IAC3BtC,MAAK,EAAcA,MAAK,MAEtBA,MAAK,IACP+B,cAAc/B,MAAK,GACnBA,MAAK,EAAca,YAAYb,KAAKc,YAAYC,KAAKf,MAAO,MAE9DA,KAAKQ,eAGPc,aACEtB,MAAK,GAAoB,GACM,IAA3BA,MAAK,IACPA,MAAK,EAAmBA,MAAK,EAAe,GAE9CA,KAAKL,WAAWwB,MAAMmB,KAAO,IAC3BtC,MAAK,EAAcA,MAAK,MAEtBA,MAAK,IACP+B,cAAc/B,MAAK,GACnBA,MAAK,EAAca,YAAYb,KAAKsB,WAAWP,KAAKf,MAAO,MAE7DA,KAAKQ,eAGPD,kBACE,MAAMgC,EAAc9B,SAAS+B,yBAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,MAAK,EAAcyC,IAAK,CAC1C,MAAMC,EAASjC,SAASkC,cAAc,UACtCD,EAAOR,QAAQC,MAAQM,EACvBC,EAAOZ,aAAa,OAAQ,UAC5BY,EAAOZ,aAAa,QAAS,aAC7BS,EAAYK,YAAYF,GAE1B1C,KAAKY,gBAAgBgC,YAAYL,GAGnC/B,eACER,KAAKY,gBAAgBD,cAAc,YAAYkC,UAAUC,OAAO,UAChE9C,KAAKY,gBACFD,cAAc,wBAAwBX,MAAK,EAAmB,MAC9D6C,UAAUE,IAAI,UAGnBC,uB","sources":["webpack://image-slider/./src/js/index.js","webpack://image-slider/./src/js/ImageSlider.js"],"sourcesContent":["import '../css/style.css';\r\nimport Slider from './ImageSlider';\r\n\r\nconst slider = new Slider();\r\n","export default class ImageSlider {\r\n  #currentPosition = 0;\r\n\r\n  #slideNumber = 0;\r\n\r\n  #slideWidth = 0;\r\n\r\n  #autoPlay = true;\r\n\r\n  #intervalId;\r\n\r\n  slideWrapEl;\r\n\r\n  slideBoxEl;\r\n\r\n  nextBtnEl;\r\n\r\n  previousBtnEl;\r\n\r\n  controlWrapEl;\r\n\r\n  constructor() {\r\n    this.assignElement();\r\n    this.initSlideNumber();\r\n    this.initSlideWidth();\r\n    this.initSliderBoxWidth();\r\n    this.initAutoPlay();\r\n    this.addEvent();\r\n    this.createIndicator();\r\n    this.setIndicator();\r\n  }\r\n\r\n  assignElement() {\r\n    this.slideWrapEl = document.getElementById('slide-wrap');\r\n    this.slideBoxEl = this.slideWrapEl.querySelector('.slide-box');\r\n    this.nextBtnEl = this.slideWrapEl.querySelector('.next');\r\n    this.previousBtnEl = this.slideWrapEl.querySelector('.prev');\r\n    this.indicatorWrapEl = this.slideWrapEl.querySelector('.indicator-wrap');\r\n    this.controlWrapEl = this.slideWrapEl.querySelector('.control-wrap');\r\n  }\r\n\r\n  initAutoPlay() {\r\n    this.#intervalId = setInterval(this.moveToRight.bind(this), 3000);\r\n  }\r\n\r\n  initSlideNumber() {\r\n    this.#slideNumber = this.slideBoxEl.querySelectorAll('.slide').length;\r\n  }\r\n\r\n  initSlideWidth() {\r\n    this.#slideWidth = this.slideBoxEl.clientWidth;\r\n  }\r\n\r\n  initSliderBoxWidth() {\r\n    this.slideBoxEl.style.width = `${this.#slideNumber * this.#slideWidth}px`;\r\n  }\r\n\r\n  addEvent() {\r\n    this.nextBtnEl.addEventListener('click', this.moveToRight.bind(this));\r\n    this.previousBtnEl.addEventListener('click', this.moveToLeft.bind(this));\r\n    this.indicatorWrapEl.addEventListener(\r\n      'click',\r\n      this.onClickIndicator.bind(this),\r\n    );\r\n    this.controlWrapEl.addEventListener('click', this.autoPlay.bind(this));\r\n  }\r\n\r\n  autoPlay(e) {\r\n    const targetParent = e.target.parentNode.parentNode;\r\n\r\n    if (targetParent.getAttribute('data-status') === 'pause') {\r\n      this.#autoPlay = true;\r\n      targetParent.setAttribute('data-status', 'play');\r\n      this.initAutoPlay();\r\n    } else {\r\n      this.#autoPlay = false;\r\n      targetParent.setAttribute('data-status', 'pause');\r\n      clearInterval(this.#intervalId);\r\n    }\r\n  }\r\n\r\n  onClickIndicator(e) {\r\n    const indexPosition = parseInt(e.target.dataset.index, 10);\r\n    if (Number.isInteger(indexPosition)) {\r\n      this.#currentPosition = indexPosition;\r\n      this.slideBoxEl.style.left = `-${\r\n        this.#slideWidth * this.#currentPosition\r\n      }px`;\r\n      this.setIndicator();\r\n    }\r\n  }\r\n\r\n  moveToRight() {\r\n    this.#currentPosition += 1;\r\n    if (this.#currentPosition === this.#slideNumber) {\r\n      this.#currentPosition = 0;\r\n    }\r\n    this.slideBoxEl.style.left = `-${\r\n      this.#slideWidth * this.#currentPosition\r\n    }px`;\r\n    if (this.#autoPlay) {\r\n      clearInterval(this.#intervalId);\r\n      this.#intervalId = setInterval(this.moveToRight.bind(this), 3000);\r\n    }\r\n    this.setIndicator();\r\n  }\r\n\r\n  moveToLeft() {\r\n    this.#currentPosition -= 1;\r\n    if (this.#currentPosition === -1) {\r\n      this.#currentPosition = this.#slideNumber - 1;\r\n    }\r\n    this.slideBoxEl.style.left = `-${\r\n      this.#slideWidth * this.#currentPosition\r\n    }px`;\r\n    if (this.#autoPlay) {\r\n      clearInterval(this.#intervalId);\r\n      this.#intervalId = setInterval(this.moveToLeft.bind(this), 3000);\r\n    }\r\n    this.setIndicator();\r\n  }\r\n\r\n  createIndicator() {\r\n    const docFragment = document.createDocumentFragment();\r\n    for (let i = 0; i < this.#slideNumber; i++) {\r\n      const button = document.createElement('button');\r\n      button.dataset.index = i;\r\n      button.setAttribute('type', 'button');\r\n      button.setAttribute('class', 'indicator');\r\n      docFragment.appendChild(button);\r\n    }\r\n    this.indicatorWrapEl.appendChild(docFragment);\r\n  }\r\n\r\n  setIndicator() {\r\n    this.indicatorWrapEl.querySelector('.active')?.classList.remove('active');\r\n    this.indicatorWrapEl\r\n      .querySelector(`.indicator:nth-child(${this.#currentPosition + 1})`)\r\n      .classList.add('active');\r\n  }\r\n\r\n  autoplayInterval() {}\r\n}\r\n"],"names":["slideWrapEl","slideBoxEl","nextBtnEl","previousBtnEl","controlWrapEl","constructor","this","assignElement","initSlideNumber","initSlideWidth","initSliderBoxWidth","initAutoPlay","addEvent","createIndicator","setIndicator","document","getElementById","querySelector","indicatorWrapEl","setInterval","moveToRight","bind","querySelectorAll","length","clientWidth","style","width","addEventListener","moveToLeft","onClickIndicator","autoPlay","e","targetParent","target","parentNode","getAttribute","setAttribute","clearInterval","indexPosition","parseInt","dataset","index","Number","isInteger","left","docFragment","createDocumentFragment","i","button","createElement","appendChild","classList","remove","add","autoplayInterval"],"sourceRoot":""}